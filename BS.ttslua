function onLoad(save)
   cardnames = {"Ace","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King"}
   gamename = "BS"
   Global.call("RegisterMod",{self.guid})
   timerTick = 1
   poslist = {
      {0,0,4.65},
      {-2.1,0,4.65},
      {2.1,0,4.65},
   }
   if save ~= "" then
      Running = false
      self.createButton({
         label=gamename, click_function="start", function_owner=self,
         position={0,0.19,0}, rotation={0,0,0}, width=1200, height=450, font_size=300
      })
   else
      local tbl = JSON.decode(save) or {}
      Running = tbl[1] or false
      if Running == false then
         self.clearButtons()
         self.createButton({
            label=gamename, click_function="start", function_owner=self,
            position={0,0.19,0}, rotation={0,0,0}, width=1200, height=450, font_size=300
         })
      else
         self.clearButtons()
         self.createButton({
            label="Reset", click_function="SendReset", function_owner=self,
            position={0,0.19,0}, rotation={0,0,0}, width=600, height=450, font_size=150
         })
      end
   end
   display = {getObjectFromGUID("084f05"),getObjectFromGUID("c3da13")}
   rzone = getObjectFromGUID("11b50e")
   gzone = getObjectFromGUID("c28f42")
   wzone = getObjectFromGUID("d72560")
   getturn()
   --hideobjs = {}
end

function onSave()
   local tbl = {Running}
   return JSON.encode(tbl)
end

function Reset()
   Running = false
   self.clearButtons()
   self.createButton({
      label="BS", click_function="start", function_owner=self,
      position={0,0.19,0}, rotation={0,0,0}, width=1200, height=450, font_size=300
   })
end

function SendReset()
Global.call("Reset",{})
end

function start(obj,col)
   displaydone = true
   oncard = 1
   lockout = false
   lastcards = {"A 1"}
   Running = true
   setNotes("On Card: " .. cardnames[oncard])
   Global.call("SetAce",{true})
   startLuaCoroutine(self, "start2")
end

function start2()
   --add changes if mult decks wanted for many players.
   for i,obj in ipairs(getAllObjects()) do
      if obj.tag == "Card" or obj.tag == "Deck" then
         obj.destruct()
      end
   end
   self.clearButtons()
   self.createButton({
      label="Reset", click_function="SendReset", function_owner=self,
      position={0,0.19,0}, rotation={0,0,0}, width=600, height=450, font_size=150
   })
   for i=1,2 do
      display[i].clearButtons()
      display[i].createButton({
         label="Call BS", click_function="checkbs", function_owner=self,
         position={0,0.19,0}, rotation={0,0,0}, width=1200, height=450, font_size=300
      })
   end
    getrandomdeck({zone=gzone,numb=1})
    local deck = findDeck(gzone)
   for i,v in pairs(deck.getObjects()) do
      if v.nickname == "Joker" then
         deck.takeObject({
            position = {0,i,0},
            callback       = "deljoker",
            callback_owner = self,
            guid = v.guid,
         })
      end
   end
   deck.shuffle()
   for ind=1,deck.getQuantity() do
      if deck then
         for i,v in pairs(getSeatedPlayers()) do
            local newobj = deck.deal(1,v)
         end
      end
   end
   waitFrames(70)
   for i,v in pairs(getSeatedPlayers()) do
      Global.call("autoN",{v})
      waitFrames(1)
   end
   return 1
end

function deljoker(obj)
   obj.destruct()
end

function checkbs(obj,col)
   temptable = {col=col}
   startLuaCoroutine(self, "checkbs2")
end

function checkbs2()
   local col = temptable.col
   temptable = nil
   local compcard
   if oncard-1 == 0 then
      compcard = 13
   elseif oncard-1 ~= 0 then
      compcard = oncard-1
   end
   local deck = findDeck(wzone)
   if deck and displaydone then
      if deck.getQuantity() > 1 then
         for i,v in pairs(lastcards) do
            if tonumber(string.sub(v,1,2)) ~= compcard then
               local dispcards = displaycards({deck,#lastcards})
               waitFrames(60)
               waitFrames(30)
               deck = findDeck(wzone)
               if deck then
                  deck.deal(deck.getQuantity(),lastturncol)
               end
               displaydone = true
               waitFrames(50)
               Global.call("autoN",{lastturncol})
               return 1
            end
         end
         local dispcards = displaycards({deck,#lastcards})
         waitFrames(60)
         waitFrames(30)
         deck = findDeck(wzone)
         if deck then
            deck.deal(deck.getQuantity(),col)
         end
         displaydone = true
         waitFrames(50)
         Global.call("autoN",{col})
      else
         if tonumber(string.sub(lastcards[1],1,2)) ~= compcard then
            local dispcards = displaycards({deck,#lastcards})
            waitFrames(60)
            waitFrames(30)
            deck = findDeck(wzone)
            deck.deal(1,lastturncol)
            displaydone = true
            waitFrames(50)
            Global.call("autoN",{lastturncol})
            return 1
         end
         local dispcards = displaycards({deck,#lastcards})
         waitFrames(60)
         waitFrames(30)
         deck = findDeck(wzone)
         deck.deal(1,col)
         displaydone = true
         waitFrames(50)
         Global.call("autoN",{col})
      end
   end
   return 1
end

function onObjectEnterScriptingZone(zone, obj)
   if Running == true and zone == wzone then
      local color = obj.held_by_color
      if color == nil then
         return
      elseif color == turn and displaydone then
         if lockout == false then
            lastcards = {}
         end
         if obj.tag == "Deck" then
            for i,v in pairs(obj.getObjects()) do
               table.insert(lastcards,v.description)
            end
         elseif obj.tag == "Card" then
            table.insert(lastcards,obj.getDescription())
         end
         local pos = wzone.getPosition()
         if findDeck(wzone) then
            local deck = findDeck(wzone)
            obj.setPosition({pos.x,deck.getBounds().size.y+deck.getPosition().y,pos.z})
         else
            obj.setPosition({pos.x,1.03,pos.z})
         end
         obj.setRotation({0,0,180})
         --delhidingzone({obj})
         obj.reload()
         if lockout == false then
            lockout = true
            startLuaCoroutine(self, "waitforcards")
         end
      elseif turn == "Off" and displaydone then
         if lockout == false then
            lastcards = {}
         end
         if obj.tag == "Deck" then
            for i,v in pairs(obj.getObjects()) do
               table.insert(lastcards,v.description)
            end
         elseif obj.tag == "Card" then
            table.insert(lastcards,obj.getDescription())
         end
         Global.call("SetTurn",{color})
         getturn()
         local pos = wzone.getPosition()
         obj.setPosition({pos.x,1.03,pos.z})
         obj.setRotation({0,0,180})
         --delhidingzone({obj})
         obj.reload()
         if lockout == false then
            lockout = true
            startLuaCoroutine(self, "waitforcards")
         end
      elseif color ~= turn or not displaydone then
         if obj.tag == "Card" then
            obj.deal(1, color)
         elseif obj.tag == "Deck" then
            obj.deal(obj.getQuantity(), color)
         end
      end
   end
end

function displaycards2()
   displaydone = false
   local info = temptable1
   local cards = info[1]
   local displaycardobjs = {}
   local count = info[2] or cards.getQuantity()
   local pos = wzone.getPosition()
   for i = 1,count do
      if cards.tag == "Deck" then
         local size = cards.getBounds().size
         local pos2 = {(pos.x-((count/2)*size.x))+((i-1)*size.x),pos.y+4,pos.z} --fix later
         local newobj = cards.takeObject({
            position       = pos2,
            flip           = true,
            top            = true,
         })
         table.insert(displaycardobjs,newobj)
         newobj.setLock(true)
      elseif cards.tag == "Card" then
         local size = cards.getBounds().size
         local pos2 = {(pos.x-((count/2)*size.x))+((i-1)*size.x),pos.y+4,pos.z} --fix later
         cards.setPosition(pos2)
         cards.setRotation({0,0,0})
         table.insert(displaycardobjs,cards)
         cards.setLock(true)
      end
   end
   waitFrames(60)
   deck = findDeck(wzone)
   for ind,var in pairs(displaycardobjs) do
      var.setLock(false)
      if deck then
         var.setPosition({pos.x,deck.getBounds().size.y+deck.getPosition().y,pos.z})
      else
         var.setPosition({pos.x,1.03,pos.z})
      end
      var.setRotation({0,0,180})
   end
   temptable1 = nil
   return 1
end

function displaycards(info)
   temptable1 = info
   startLuaCoroutine(self,"displaycards2")
end

function waitforcards()
   waitFrames(30)
   getturn()
   lastturncol = turn
   Global.call("NextPlayer",{false})
   getturn()
   lockout = false
   if oncard+1 > 13 then
      oncard = 1
   elseif oncard+1 <= 13 then
      oncard = oncard+1
   end
   setNotes("On Card: " .. cardnames[oncard])
   return 1
end

function waitFrames(frames)
   while frames > 0 do
      coroutine.yield(0)
      frames = frames - 1
   end
end

function getrandomdeck(info)
   local numb = info.numb or 1
   local normaldeckbag = getObjectFromGUID(Global.getVar("normaldeckbag"))
   local newobj = normaldeckbag.takeObject({})
   newobj.shuffle()
   local deck = newobj.takeObject({
      position       = pos,
      rotation       = {0,0,180},
      smooth         = false,
   })
  for i=1,numb do
     local nDeck = deck.clone({})
     putCardInstant(nDeck,info.zone,true)
     waitFrames(5)
  end
  deck.destruct()
  newobj.destruct()
  waitFrames(30)
   return 1
end

function findDeck(zone)
   if zone.getObjects() then
      for i, obj in ipairs(zone.getObjects()) do
         if obj.tag == "Deck" then
            return obj
         end
      end
      for i, obj in ipairs(zone.getObjects()) do
         if obj.tag == "Card" then
            return obj
         end
      end
   end
   return false
end

function getturn()
   turn = Global.getVar("Turn")
end
function putCardInstant(obj,zone,flip) --checks if deck exsists and puts it ontop of deck, otherwise sets it to a constant y vale.
    local rot
    if flip == true then
        rot = {0,0,180}
    else
        rot = {0,0,0}
    end
   local pos = zone.getPosition()
   local deck = findDeck(zone)
   if deck then
      obj.setPosition({pos.x,deck.getBounds().size.y+deck.getPosition().y,pos.z})
   else
      obj.setPosition({pos.x,1.03,pos.z})
   end
   obj.setRotation(rot)
   obj.reload() --force player to drop card
end
